package org.angular.model.entities;

import java.io.Serializable;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Clase que representa a un grupo. Esta definido por un deporte, una lista de personas que estan en el grupo y una lista de
 * horarios en los que se practica el deporte.
 */
@Entity
@Table(name="`GROUP`")
public class Group implements Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = -4560018630201224865L;
	
	/** The id. */
	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column (name="ID_GROUP")
	private Integer id;
	
	/** The sport. */
	@ManyToOne
	@JoinColumn(name="ID_SPORT")
	private Sport sport;
	
	/** The schedules. */
	@ManyToMany
	@JoinTable(name = "GROUP_SCHEDULE", joinColumns = @JoinColumn(name = "ID_GROUP"), inverseJoinColumns = @JoinColumn(name="ID_SCHEDULE"))
	private List<Schedule> schedules;
	
	/** The People. */
	@ManyToMany
	@JoinTable(name = "GROUP_PEOPLE", joinColumns = @JoinColumn(name = "ID_GROUP"), inverseJoinColumns = @JoinColumn(name="ID_PERSON"))
	private List<Person> People;

	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	public Integer getId() {
		return id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id the new id
	 */
	public void setId(Integer id) {
		this.id = id;
	}

	/**
	 * Gets the sport.
	 *
	 * @return the sport
	 */
	public Sport getSport() {
		return sport;
	}

	/**
	 * Sets the sport.
	 *
	 * @param sport the new sport
	 */
	public void setSport(Sport sport) {
		this.sport = sport;
	}

	/**
	 * Gets the schedules.
	 *
	 * @return the schedules
	 */
	public List<Schedule> getSchedules() {
		return schedules;
	}

	/**
	 * Sets the schedules.
	 *
	 * @param schedules the new schedules
	 */
	public void setSchedules(List<Schedule> schedules) {
		this.schedules = schedules;
	}

	/**
	 * Gets the people.
	 *
	 * @return the people
	 */
	public List<Person> getPeople() {
		return People;
	}

	/**
	 * Sets the people.
	 *
	 * @param people the new people
	 */
	public void setPeople(List<Person> people) {
		People = people;
	}

	/**
	 * Hash code.
	 *
	 * @return the int
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	/**
	 * Equals.
	 *
	 * @param obj the obj
	 * @return true, if successful
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Group other = (Group) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	/**
	 * @autogenerated by CodeHaggis (http://sourceforge.net/projects/haggis)
	 * @overwrite toString()
	 * @return String returns this object in a String
	 */
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("Group::[");
		sb.append(" " + super.toString() + "");
		sb.append(" id:=");
		sb.append(id);
		sb.append(" sport:=");
		sb.append(sport);
		sb.append(" schedules:=");
		sb.append(schedules);
		sb.append(" People:=");
		sb.append(People);
		sb.append(']');
		return sb.toString();
	}

	
}
